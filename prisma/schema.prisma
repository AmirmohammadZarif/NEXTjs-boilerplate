generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  email               String   @unique
  name                String
  image               String?
  mobile              Int?
  address             String?
  bio                 String?
  password            String
  confirmed           Boolean  @default(false)
  blocked             Boolean  @default(false)
  resetPasswordToken  String?
  resetPasswordExpire BigInt?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  role   Role @relation(fields: [roleId], references: [id], onDelete: Restrict)
  roleId Int

  @@map("users")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  type        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users             User[]
  permissions       Permission[]
  clientPermissions ClientPermission[]

  @@map("roles")
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String
  method      Method
  route       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role Role[]

  @@unique([method, route])
  @@map("permissions")
}

model ClientPermission {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  sort        Int
  menu        String
  path        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role Role[]

  @@map("client_permissions")
}

enum Method {
  GET
  POST
  PUT
  DELETE
}
